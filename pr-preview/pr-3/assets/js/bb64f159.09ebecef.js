"use strict";(self.webpackChunknr_pies=self.webpackChunknr_pies||[]).push([["707"],{59437:function(e,t,s){s.r(t),s.d(t,{metadata:()=>i,contentTitle:()=>u,default:()=>g,assets:()=>m,toc:()=>f,frontMatter:()=>h});var i=JSON.parse('{"id":"spec/data/code","title":"Code","description":"A code type","source":"@site/docs/spec/data/code.mdx","sourceDirName":"spec/data","slug":"/spec/data/code","permalink":"/nr-pies/pr-preview/pr-3/docs/spec/data/code","draft":false,"unlisted":false,"editUrl":"https://github.com/bcgov/nr-pies/tree/main/docs/spec/data/code.mdx","tags":[{"inline":false,"label":"Developer","permalink":"/nr-pies/pr-preview/pr-3/docs/tags/developer","description":"Content related to technical structure and implementation"}],"version":"current","lastUpdatedBy":"Jeremy Ho","lastUpdatedAt":1732325473000,"frontMatter":{"id":"code","title":"Code","description":"A code type","tags":["developer"]},"sidebar":"docSidebar","previous":{"title":"Data Types","permalink":"/nr-pies/pr-preview/pr-3/docs/category/data-types"},"next":{"title":"Parcel Identifier","permalink":"/nr-pies/pr-preview/pr-3/docs/spec/data/parcel_id"}}'),n=s("85893"),r=s("50065"),a=s("45056"),c=s("98477"),d=s.n(c),o=s("47902"),l=s("5525"),p=JSON.parse('{"$id":"https://github.com/bcgov/nr-pies/blob/main/docs/spec/types/code.schema.json","$schema":"https://json-schema.org/draft-07/schema","title":"Code","description":"Code Data Type","type":"string","pattern":"^[^\\\\s]+( [^\\\\s]+)*$"}');let h={id:"code",title:"Code",description:"A code type",tags:["developer"]},u=void 0,m={},f=[{value:"Structure",id:"structure",level:2},{value:"Specification",id:"specification",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"References",id:"references",level:2}];function v(e){let t={code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Indicates that the value is taken from a set of controlled strings defined elsewhere. Technically, a code is restricted\nto a string which has at least one character and no leading or trailing whitespace, and where there is no whitespace\nother than single spaces in the contents."}),"\n",(0,n.jsx)(t.p,{children:"This data type is intended to represent a finite set of controlled strings which represents a specific, discrete\nconcept, element or idea."}),"\n",(0,n.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,n.jsxs)(t.p,{children:["Type: ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.h2,{id:"specification",children:"Specification"}),"\n",(0,n.jsxs)(o.default,{queryString:"tab",children:[(0,n.jsx)(l.default,{value:"schema",label:"Schema",default:!0,children:(0,n.jsx)(d(),{schema:p,viewerOptions:{showExamples:!0}})}),(0,n.jsx)(l.default,{value:"source",label:"Source",children:(0,n.jsx)(a.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(p,null,2)})})]}),"\n",(0,n.jsx)(t.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,n.jsx)(t.p,{children:"TBD"}),"\n",(0,n.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,n.jsx)(t.p,{children:"TBD"})]})}function g(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}}}]);