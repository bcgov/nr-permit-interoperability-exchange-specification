(self.webpackChunknr_pies=self.webpackChunknr_pies||[]).push([["615"],{70313:function(e,s,t){"use strict";t.r(s),t.d(s,{default:()=>b,frontMatter:()=>m,metadata:()=>r,assets:()=>f,toc:()=>g,contentTitle:()=>v});var r=JSON.parse('{"id":"spec/message/process_event_set","title":"Process Event Set \uD83D\uDCDD","description":"Represents a set of process events associated to a specific record","source":"@site/docs/spec/message/process_event_set.mdx","sourceDirName":"spec/message","slug":"/spec/message/process_event_set","permalink":"/nr-pies/docs/spec/message/process_event_set","draft":false,"unlisted":false,"editUrl":"https://github.com/bcgov/nr-pies/tree/main/docs/spec/message/process_event_set.mdx","tags":[{"inline":false,"label":"Business","permalink":"/nr-pies/docs/tags/business","description":"Content related to business cases and rationale"},{"inline":false,"label":"Developer","permalink":"/nr-pies/docs/tags/developer","description":"Content related to technical structure and implementation"}],"version":"current","lastUpdatedBy":"Jeremy Ho","lastUpdatedAt":1740447021000,"frontMatter":{"id":"process_event_set","title":"Process Event Set \uD83D\uDCDD","description":"Represents a set of process events associated to a specific record","tags":["business","developer"]},"sidebar":"docSidebar","previous":{"title":"Guidelines \uD83D\uDCDD","permalink":"/nr-pies/docs/spec/message/guidelines"},"next":{"title":"Record Linkage \uD83D\uDEA7","permalink":"/nr-pies/docs/spec/message/record_linkage"}}'),n=t("85893"),i=t("50065"),o=t("31705"),c=t("42415"),a=t.n(c),l=t("58168"),d=t("97645"),p=t("19453"),h=JSON.parse('{"tx_id":"01950719-b154-72f5-8437-5572df032a69","version":"0.1.0","kind":"ProcessEventSet","system_id":"https://apps.nrs.gov.bc.ca/int/jira/secure/insight/assets/ITSM-5917","record_id":"06bc53dc-3e4f-420b-801c-bd9cc0ea01b2","record_kind":"Permit","process_event":[{"event":{"start_date":"2024-12-01","end_date":"2024-12-31"},"process":{"class":["Application","Review","Assessment","UnderReview"],"concept":"https://bcgov.github.io/nr-pies/docs/spec/concept/process_tracking","description":"The authorization request is under review by subject matter expert.","status":"Auditing","status_code":"AU"}},{"event":{"start_date":"2025-01-01"},"process":{"class":["Application","Decision","Declined"],"concept":"https://bcgov.github.io/nr-pies/docs/spec/concept/process_tracking","description":"The authorization request has been declined due to a conflict of interest.","status":"DeclinedConflict"}}]}'),u=JSON.parse('{"$id":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/message/process_event_set.schema.json","$schema":"https://json-schema.org/draft-07/schema","title":"Process Event Set","description":"Represents a process concept at a specific event in time.","type":"object","properties":{"process_event":{"type":"array","items":{"$ref":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/resource/process_event.schema.json"},"minItems":1,"uniqueItems":true}},"allOf":[{"$ref":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/data/header.schema.json"}],"required":["process_event"]}');let m={id:"process_event_set",title:"Process Event Set \uD83D\uDCDD",description:"Represents a set of process events associated to a specific record",tags:["business","developer"]},v=void 0,f={},g=[{value:"Scope",id:"scope",level:2},{value:"Structure",id:"structure",level:2},{value:"Specification",id:"specification",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"References",id:"references",level:2}];function j(e){let s={a:"a",h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"../overview#maturity",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/badge/Maturity-Draft-yellow",alt:"Maturity"})})}),"\n",(0,n.jsx)(s.p,{children:"Represents a set of process events associated to a specific record."}),"\n",(0,n.jsx)(s.h2,{id:"scope",children:"Scope"}),"\n",(0,n.jsx)(s.p,{children:"This message type is intended to represent a set of temporal events within a defined process. This will commonly be\nused for situations where acquiring a record's process history is required, such as for auditing, reporting or\ncompliance purposes."}),"\n",(0,n.jsx)(s.p,{children:"Note that this message type does not guarantee nor expect all known or related ProcessEvents to be present. It is\npossible for this message to only contain a subset of all known ProcessEvents."}),"\n",(0,n.jsx)(s.h2,{id:"structure",children:"Structure"}),"\n",(0,n.jsxs)(s.p,{children:["A Process Event Set shall contain every standard message ",(0,n.jsx)(s.a,{href:"../data/header#structure",children:"Header"})," property, in addition to\nthe following properties:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Cardinality"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description & Constraints"})]})}),(0,n.jsx)(s.tbody,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"process_event"}),(0,n.jsx)(s.td,{children:"1..1"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"../resource/process_event",children:"ProcessEvent"})}),(0,n.jsx)(s.td,{children:"A set of ProcessEvents. Represents a set of process concepts at a specific event in time."})]})})]}),"\n",(0,n.jsx)(s.h2,{id:"specification",children:"Specification"}),"\n",(0,n.jsxs)(l.default,{queryString:"tab",children:[(0,n.jsx)(d.default,{value:"schema",label:"Schema",default:!0,children:(0,n.jsx)(a(),{resolverOptions:(0,p.tw)({remote:!0}),schema:u,viewerOptions:{showExamples:!0}})}),(0,n.jsx)(d.default,{value:"source",label:"Source",children:(0,n.jsx)(o.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(u,null,2)})}),(0,n.jsx)(d.default,{value:"example",label:"Example",children:(0,n.jsx)(o.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(h,null,2)})})]}),"\n",(0,n.jsx)(s.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,n.jsxs)(s.p,{children:["The Process Event Set message type is designed to act as an aggregation of ",(0,n.jsx)(s.a,{href:"../resource/process_event",children:"ProcessEvent"}),"s. Systems creating this message type should provide all known ProcessEvents associated to a record where possible. Recipient systems should not assume that the message will provide the full data horizon of all ProcessEvents. If he full data horizon is required, recipient systems must ensure that they request for any other relevant ProcessEventSets that may come from associated records."]}),"\n",(0,n.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"../data/header",children:"Header"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"../resource/process_event",children:"ProcessEvent"})}),"\n"]})]})}function b(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}},73586:function(e,s,t){var r={"./img/interoperable.svg":["69358","5386"],"./img/logo.svg":["92107","1587"],"./img/cc-by.png":["93551","884"],"./img/favicon.ico":["59854","2054"],"./img/opensource.svg":["21983","5583"],"./img/BCID_H_rgb_rev.png":["49638","5467"],"./img/docusaurus.png":["38970","154"],"./img/BCID_H_rgb_pos.png":["60057","8151"],"./img/easytouse.svg":["61954","6817"],"./img/favicon.png":["36178","1034"]};function n(e){if(!t.o(r,e))return Promise.resolve().then(function(){var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s});var s=r[e],n=s[0];return t.e(s[1]).then(function(){return t(n)})}n.keys=()=>Object.keys(r),n.id="73586",e.exports=n},19453:function(e,s,t){"use strict";function r(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0],{resolve:e=>new Promise((s,t)=>{fetch(e.toString(),{headers:{Accept:"application/json"}}).then(e=>e.json()).then(e=>s(e)).catch(e=>t(e))})}}function n(e){let{basePath:s,jsonPointer:n,remote:i}=e,o={};return s&&(o.resolvers={file:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{resolve:s=>new Promise((r,n)=>{let i=function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=e.toString().split("/"),r=s;for(let e=0;e<t.length;e++)if(".."===t[e])r=r.split("/").slice(0,-1).join("/");else{if("."===t[e])continue;r=`${r}/${t[e]}`}return r}(s,e);t(73586)(`./${i.substring(1)}`).then(e=>r(e.default)).catch(e=>n(e))})}}(s)}),i&&(void 0===o.resolvers&&(o.resolvers={}),o.resolvers.http=r("http"),o.resolvers.https=r("https")),n&&(o.jsonPointer=n),o}t.d(s,{tw:()=>n})}}]);