(self.webpackChunknr_pies=self.webpackChunknr_pies||[]).push([["3663"],{29035:function(e,s,t){"use strict";t.r(s),t.d(s,{default:()=>b,frontMatter:()=>m,metadata:()=>r,assets:()=>f,toc:()=>v,contentTitle:()=>g});var r=JSON.parse('{"id":"spec/message/record_linkage","title":"Record Linkage \uD83D\uDEA7","description":"Represents an assertion for a specific record to be related or linked together","source":"@site/docs/spec/message/record_linkage.mdx","sourceDirName":"spec/message","slug":"/spec/message/record_linkage","permalink":"/nr-pies/docs/spec/message/record_linkage","draft":false,"unlisted":false,"editUrl":"https://github.com/bcgov/nr-pies/tree/main/docs/spec/message/record_linkage.mdx","tags":[{"inline":false,"label":"Business","permalink":"/nr-pies/docs/tags/business","description":"Content related to business cases and rationale"},{"inline":false,"label":"Developer","permalink":"/nr-pies/docs/tags/developer","description":"Content related to technical structure and implementation"}],"version":"current","lastUpdatedBy":"Jeremy Ho","lastUpdatedAt":1740447021000,"frontMatter":{"id":"record_linkage","title":"Record Linkage \uD83D\uDEA7","description":"Represents an assertion for a specific record to be related or linked together","tags":["business","developer"]},"sidebar":"docSidebar","previous":{"title":"Process Event Set \uD83D\uDCDD","permalink":"/nr-pies/docs/spec/message/process_event_set"}}'),i=t("85893"),n=t("50065"),o=t("31705"),d=t("42415"),a=t.n(d),c=t("58168"),l=t("97645"),h=t("19453"),p=JSON.parse('{"tx_id":"01950719-b154-72f5-8437-5572df032a69","version":"0.1.0","kind":"RecordLinkage","system_id":"https://apps.nrs.gov.bc.ca/int/jira/secure/insight/assets/ITSM-5917","record_id":"06bc53dc-3e4f-420b-801c-bd9cc0ea01b2","record_kind":"Permit","linked_system_id":"https://apps.nrs.gov.bc.ca/int/jira/secure/insight/assets/ITSM-5314","linked_record_id":"5d884469-d016-4b87-8d65-4a1520ae788b","linked_record_kind":"Tracking"}'),u=JSON.parse('{"$id":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/message/process_event_set.schema.json","$schema":"https://json-schema.org/draft-07/schema","title":"Record Linkage","description":"Represents an assertion for a specific record to be related or linked together.","type":"object","properties":{"linked_system_id":{"type":"string","description":"A valid URI that identifies the source system, service or asset that the linked data comes from. This URI should point to an authoritative asset tracking system or equivalent. However, the URI does not need to be machine readable.","format":"uri"},"linked_record_id":{"type":"string","description":"The record or primary key representing what record should be linked with the primary header record."},"linked_record_kind":{"type":"string","description":"The kind of record the source system stores this linked record as (i.e. Permit, Project, Submission or Tracking).","enum":["Permit","Project","Submission","Tracking"]}},"allOf":[{"$ref":"https://raw.githubusercontent.com/bcgov/nr-pies/refs/heads/main/docs/spec/data/header.schema.json"}],"required":["linked_record_id","linked_record_kind","linked_system_id"]}');let m={id:"record_linkage",title:"Record Linkage \uD83D\uDEA7",description:"Represents an assertion for a specific record to be related or linked together",tags:["business","developer"]},g=void 0,f={},v=[{value:"Scope",id:"scope",level:2},{value:"Structure",id:"structure",level:2},{value:"Specification",id:"specification",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"References",id:"references",level:2}];function j(e){let s={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"../overview#maturity",children:(0,i.jsx)(s.img,{src:"https://img.shields.io/badge/Maturity-Planning-orange",alt:"Maturity"})})}),"\n",(0,i.jsx)(s.p,{children:"Represents an assertion for specific records to be related or linked together."}),"\n",(0,i.jsx)(s.h2,{id:"scope",children:"Scope"}),"\n",(0,i.jsx)(s.p,{children:"This message type is intended to allow systems to assert that two records are related and should be linked\nHowever, this message only serves as an assertion; validation of the relationship between the records is left to the\nconsuming system."}),"\n",(0,i.jsx)(s.h2,{id:"structure",children:"Structure"}),"\n",(0,i.jsxs)(s.p,{children:["A Process Event Set shall contain every standard message ",(0,i.jsx)(s.a,{href:"../data/header#structure",children:"Header"})," property, in addition to\nthe following properties:"]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Name"}),(0,i.jsx)(s.th,{children:"Cardinality"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description & Constraints"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"linked_system_id"}),(0,i.jsx)(s.td,{children:"1..*"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"string"})}),(0,i.jsx)(s.td,{children:"A valid URI that identifies the source system, service or asset that the linked data comes from. This URI should point to an authoritative asset tracking system or equivalent. However, the URI does not need to be machine readable."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"linked_record_id"}),(0,i.jsx)(s.td,{children:"1..1"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"string"})}),(0,i.jsx)(s.td,{children:"The record or primary key representing what record should be linked with the primary header record."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"linked_record_kind"}),(0,i.jsx)(s.td,{children:"1..1"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"string"})}),(0,i.jsx)(s.td,{children:"The kind of record the source system stores this linked record as (i.e. Permit, Project, Submission or Tracking)."})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"specification",children:"Specification"}),"\n",(0,i.jsxs)(c.default,{queryString:"tab",children:[(0,i.jsx)(l.default,{value:"schema",label:"Schema",default:!0,children:(0,i.jsx)(a(),{resolverOptions:(0,h.tw)({remote:!0}),schema:u,viewerOptions:{showExamples:!0}})}),(0,i.jsx)(l.default,{value:"source",label:"Source",children:(0,i.jsx)(o.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(u,null,2)})}),(0,i.jsx)(l.default,{value:"example",label:"Example",children:(0,i.jsx)(o.default,{language:"json",showLineNumbers:!0,children:JSON.stringify(p,null,2)})})]}),"\n",(0,i.jsx)(s.h2,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,i.jsx)(s.p,{children:"The sole purpose of the Record Linkage message type is to define a specific link between two different records. This message may be used by the consuming system to either bind the different records together, or to use it as a way to remove a specific link between two specific records."}),"\n",(0,i.jsxs)(s.p,{children:["This message type should only specify one ",(0,i.jsx)(s.code,{children:"system_id"}),"; while the specification permits defining an unordered array of system ids, this is not recommended as it introduces ambiguity. If multiple links must be expressed, each link should have their own message."]}),"\n",(0,i.jsx)(s.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"../data/header",children:"Header"})}),"\n"]})]})}function b(e={}){let{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}},73586:function(e,s,t){var r={"./img/interoperable.svg":["69358","5386"],"./img/logo.svg":["92107","1587"],"./img/cc-by.png":["93551","884"],"./img/favicon.ico":["59854","2054"],"./img/opensource.svg":["21983","5583"],"./img/BCID_H_rgb_rev.png":["49638","5467"],"./img/docusaurus.png":["38970","154"],"./img/BCID_H_rgb_pos.png":["60057","8151"],"./img/easytouse.svg":["61954","6817"],"./img/favicon.png":["36178","1034"]};function i(e){if(!t.o(r,e))return Promise.resolve().then(function(){var s=Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s});var s=r[e],i=s[0];return t.e(s[1]).then(function(){return t(i)})}i.keys=()=>Object.keys(r),i.id="73586",e.exports=i},19453:function(e,s,t){"use strict";function r(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0],{resolve:e=>new Promise((s,t)=>{fetch(e.toString(),{headers:{Accept:"application/json"}}).then(e=>e.json()).then(e=>s(e)).catch(e=>t(e))})}}function i(e){let{basePath:s,jsonPointer:i,remote:n}=e,o={};return s&&(o.resolvers={file:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return{resolve:s=>new Promise((r,i)=>{let n=function(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=e.toString().split("/"),r=s;for(let e=0;e<t.length;e++)if(".."===t[e])r=r.split("/").slice(0,-1).join("/");else{if("."===t[e])continue;r=`${r}/${t[e]}`}return r}(s,e);t(73586)(`./${n.substring(1)}`).then(e=>r(e.default)).catch(e=>i(e))})}}(s)}),n&&(void 0===o.resolvers&&(o.resolvers={}),o.resolvers.http=r("http"),o.resolvers.https=r("https")),i&&(o.jsonPointer=i),o}t.d(s,{tw:()=>i})}}]);